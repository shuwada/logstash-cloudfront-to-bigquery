input {
  s3 {
    type => "cloudfront"

    access_key_id => "YOUR_AWS_ACCESS_ID"
    secret_access_key => "YOUR_AWS_SECRET_ACCESS_KEY"
    region => "YOUR_REGION"
    bucket => "YOUR_BUCKET"
    prefix => "YOUR_OBJECT_KEY_PREFIX"

    # optional but good to name it explicitly.
    sincedb_path => "/var/lib/logstash/cloudfront.sincedb"
  }
}

filter {
  if [type] == "cloudfront" {
    # parse the log line
    csv {
      # Separator is a TAB! Not 4-space.
      separator => "	"

      # Google BigQuery does not allow '-' in the colum name. Use _ instead.
      columns => [ "date", "time", "x_edge_location", "sc_bytes", "c_ip", "cs_method", "Host", "cs_uri_stem", "sc_status", "referer", "user_agent", "cs_uri_query", "cookie", "x_edge_result_type", "x_edge_request_id", "x_host_header", "cs_protocol", "cs_bytes", "time_taken", "x_forwarded_for", "ssl_protocol", "ssl_cipher", "x_edge_response_result_type" ]

      # combine date and time to create a "proper" timestamp
      add_field => [ "_timestamp", "%{date} %{time}" ]
    }

    # create standard @timestamp field from _timestamp
    date {
      match => [ "_timestamp", "yy-MM-dd HH:mm:ss" ]
      timezone => "UTC"
    }

    # delete unnecessary fields
    mutate {
      remove_field => [ "_timestamp", "date", "time", "message" ]
    }

    # set proper type if not string
    mutate {
      convert => {
        "sc_bytes"   => "integer"
        "sc_status"  => "integer"
        "time_taken" => "float"
        "cs_bytes"   => "integer"
      }
    }

    # remove fields containing only '-' to make the values null
    ruby {
      code => "
        event.to_hash.each do |k,v|
          event.remove(k) if v.instance_of? String and v =~ /^\-$/
        end
      "
    }
  }
}

output { 
  # For debugging.
  #stdout {
  #  codec => rubydebug
  #}

  # don't forget to install the plugin by "bin/plugin install logstash-output-google_bigquery"
  google_bigquery {
    csv_schema => "timestamp:TIMESTAMP,x_edge_location:STRING,sc_bytes:INTEGER,c_ip:STRING,cs_method:STRING,Host:STRING,cs_uri_stem:STRING,sc_status:INTEGER,Referer:STRING,User_Agent:STRING,cs_uri_query:STRING,Cookie:STRING,x_edge_result_type:STRING,x_edge_request_id:STRING,x_host_header:STRING,cs_protocol:STRING,cs_bytes:INTEGER,time_taken:FLOAT,x_forwarded_for:STRING,ssl_protocol:STRING,ssl_cipher:STRING,x_edge_response_result_type:STRING"

    project_id => "YOUR_PROJCT_ID"
    service_account => "ACCOUNT@PROJECT.iam.gserviceaccount.com"
    key_path => "/path/to/key/file"
    dataset => "YOUR_DATA_SET"
    ignore_unknown_values => true
  }
}
